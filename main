import datetime
from os import name;


class transaction:

    def __init__(self, tran_sender_id, tran_reciver_id:str , tran_amount, description) :
        self.tran_sender_id = tran_sender_id
        self.tran_reciver_id = tran_reciver_id
        self.tran_amount = tran_amount
        self.description = description
        self.timestamp = datetime.datetime.now()



class account:

    auto_acc_id = 1234567890

    def __init__(self,curency:str, initial_balance: float = 0):
        account.auto_acc_id += 1
        self.account_id = account.auto_acc_id
        self.initial_balance = initial_balance
        self.curency = curency
        self.timestamp = datetime.datetime.now()

class client:
     def __init__(self, name: str, surname: str):
         self.name = name
         self.surname = surname
         self.timestamp = datetime.datetime.now()
         self.accounts = []

     def add_account(self, account: account):
        self.accounts.append(account)

     def print_accounts(self):
         print(f"Accounts of client{self.name, self.surname}")
         for i in self.accounts:
              print(f'{i.account_id} ({i.curency} {i.initial_balance})') 



C_saraksts = []
C_saraksts.append(client("reinis", "lohs"))
C_saraksts.append(client("reinis", "pahs"))
C_saraksts.append(client("reinis", "nahs"))

C_saraksts[0].add_account(account("EUR",4000))
C_saraksts[0].add_account(account("RUB",450))
C_saraksts[0].add_account(account("USD",3000))

C_saraksts[1].add_account(account("RUB",40))

C_saraksts[2].add_account(account("EUR"))

for c in C_saraksts:
    c.print_accounts()
